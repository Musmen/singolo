!function(n){var t={};function c(l){if(t[l])return t[l].exports;var e=t[l]={i:l,l:!1,exports:{}};return n[l].call(e.exports,e,e.exports,c),e.l=!0,e.exports}c.m=n,c.c=t,c.d=function(n,t,l){c.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:l})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,t){if(1&t&&(n=c(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var l=Object.create(null);if(c.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var e in n)c.d(l,e,function(t){return n[t]}.bind(null,e));return l},c.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(t,"a",t),t},c.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},c.p="",c(c.s=1)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Njc3Mvc3R5bGUuc2Nzcz9mNjlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./scss/style.scss\nvar style = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./js/helper.js\nconst ENTER_KEY = 'Enter';\n\nconst FORM_DEFAULT_TEXT = {\n  STATUS: 'The letter was sent',\n  SUBJECT: 'No subject',\n  MESSAGE: 'No description',\n};\n\nconst ELEMENTS = {\n  HEADER: document.querySelector('.header'),\n  NAVIGATION: document.querySelector('#navigation'),\n  NAVIGATION_LIST: document.querySelector('#mainNavigation'),\n  LAST_NAVIGATION_ITEM: document.querySelector('#mainNavigation').querySelector('a[href=\"#feedback\"]'),\n};\n\n// CONCATENATED MODULE: ./js/activeMenu.js\n\n\nclass activeMenu_ActiveMenu {\n  constructor(container, targetClass, activeClass) {\n    this.container = container;\n    this.targetClass = targetClass;\n    this.activeClass = activeClass;\n  }\n\n  removeActiveState() {\n    const { container, targetClass, activeClass } = this;\n\n    container.querySelectorAll(`.${targetClass}`)\n      .forEach((item) => {\n        item.classList.remove(activeClass);\n      });\n  }\n\n  setActiveState(target) {\n    const { activeClass } = this;\n\n    target.classList.add(activeClass);\n  }\n\n  toggleStates(target) {\n    this.removeActiveState();\n    this.setActiveState(target);\n  }\n\n  clickHandler(event) {\n    const { target } = event;\n    const { targetClass } = this;\n\n    if (!target.classList.contains(targetClass)) return;\n    this.toggleStates(target);\n  }\n\n  enterPressedHandler(event) {\n    const { target, key } = event;\n    const { targetClass } = this;\n\n    if ((key !== ENTER_KEY) || (!target.classList.contains(targetClass))) return;\n    this.toggleStates(target);\n  }\n\n  addHandlers() {\n    const { container } = this;\n\n    container.addEventListener('click', this.clickHandler.bind(this));\n    container.addEventListener('keyup', this.enterPressedHandler.bind(this));\n  }\n\n  init() {\n    this.addHandlers();\n  }\n}\n\n// CONCATENATED MODULE: ./js/utils.js\nconst disableDocumentScroll = () => {\n  document.body.classList.add('overflow-hidden');\n};\n\nconst enableDocumentScroll = () => {\n  document.body.classList.remove('overflow-hidden');\n};\n\nconst disableTab = (event) => {\n  if (event.key === 'Tab') event.preventDefault();\n};\n\nconst isDocumentBottomReached = () => {\n  const currentScrollY = window.pageYOffset;\n  const viewHeight = document.documentElement.clientHeight;\n  const maxScrollY = document.documentElement.scrollHeight;\n\n  return (currentScrollY + viewHeight >= maxScrollY);\n};\n\n// CONCATENATED MODULE: ./js/scrollMenu.js\n\n\n\n\nclass scrollMenu_ScrollMenu extends activeMenu_ActiveMenu {\n  constructor(container, targetClass, activeClass) {\n    super(container, targetClass, activeClass);\n\n    this.currentNavigationLink = null;\n    this.sectionList = null;\n  }\n\n  getCurrentNavigationLink() {\n    if (isDocumentBottomReached()) return ELEMENTS.LAST_NAVIGATION_ITEM;\n\n    const { container, currentNavigationLink, sectionsList } = this;\n    const headerHeight = ELEMENTS.HEADER.offsetHeight;\n    const currentPositionY = window.scrollY + headerHeight;\n\n    const currentSection = sectionsList.find((section) => (section.offsetTop <= currentPositionY)\n      && (section.offsetTop + section.offsetHeight > currentPositionY));\n\n    if (!currentSection) return currentNavigationLink;\n\n    const navigationLinkHref = currentSection.dataset.navigation;\n    const newCurrentNavigationLink = container.querySelector(`a[href=\"${navigationLinkHref}\"]`);\n    return newCurrentNavigationLink;\n  }\n\n  scrollHandler() {\n    const { currentNavigationLink } = this;\n    const target = this.getCurrentNavigationLink();\n    if (currentNavigationLink === target) return;\n\n    this.setCurrentNavigationLink(target);\n    this.toggleStates(target);\n  }\n\n  setCurrentNavigationLink(target) {\n    this.currentNavigationLink = target;\n  }\n\n  addScrollHandler() {\n    document.addEventListener('scroll', this.scrollHandler.bind(this));\n  }\n\n  addHandlers() {\n    this.addScrollHandler();\n  }\n\n  init() {\n    this.sectionsList = [...document.querySelectorAll('section[data-navigation]')];\n    this.scrollHandler();\n    super.init();\n  }\n}\n\n// CONCATENATED MODULE: ./js/popup.js\n\n\nclass popup_Popup {\n  constructor(container = null, mainClass = 'popup', onOpenCallback, onCloseCallback) {\n    this.container = container;\n    this.mainClass = mainClass;\n    this.onOpenCallback = onOpenCallback;\n    this.onCloseCallback = onCloseCallback;\n\n    this.close = this.close.bind(this);\n  }\n\n  build(content) {\n    const { mainClass } = this;\n    const {\n      status,\n      defaultSubject,\n      defaultMessage,\n      subject,\n      message,\n    } = content;\n    const popup = document.querySelector('#popup__template').content.cloneNode(true);\n    const layout = popup.querySelector('.popup__layout');\n\n    layout.classList.add(mainClass);\n    popup.querySelector('.popup__status').textContent = status;\n\n    if (subject) {\n      popup.querySelector('.popup__lead_subject').textContent = subject;\n    } else popup.querySelector('.popup__subject').textContent = defaultSubject;\n    if (message) {\n      popup.querySelector('.popup__lead_message').textContent = message;\n    } else popup.querySelector('.popup__message').textContent = defaultMessage;\n\n    layout.addEventListener('click', this.close);\n\n    return popup;\n  }\n\n  open(content) {\n    const { container } = this;\n    const popup = this.build(content);\n\n    container.append(popup);\n\n    const popupLayout = container.querySelector('.popup__layout');\n    popupLayout.focus();\n    if (this.onOpenCallback) this.onOpenCallback(popupLayout);\n    disableDocumentScroll();\n  }\n\n  close(event) {\n    const { target } = event;\n    const { container } = this;\n    const popup = container.querySelector('.popup__layout');\n    const closePopupButton = popup.querySelector('.popup__close-button');\n    if (target !== closePopupButton) return;\n\n    if (this.onCloseCallback) this.onCloseCallback(popup);\n    popup.remove();\n    enableDocumentScroll();\n  }\n}\n\n// CONCATENATED MODULE: ./js/burgerMenu.js\n\n\n\n\nclass burgerMenu_BurgerMenu extends popup_Popup {\n  constructor(container = null) {\n    super(container);\n    this.isOpen = false;\n    this.burgerMenuButton = null;\n  }\n\n  build() {\n    const logo = ELEMENTS.HEADER.querySelector('.logo').cloneNode(true);\n    const navigation = ELEMENTS.HEADER.querySelector('#navigation').cloneNode(true);\n    navigation.classList.add('display-flex');\n\n    const popup = document.querySelector('#burger__template').content.cloneNode(true);\n    const layout = popup.querySelector('.burger__layout');\n    const wrapper = popup.querySelector('.burger__wrapper');\n    wrapper.append(logo);\n    wrapper.append(navigation);\n\n    layout.addEventListener('click', this.burgerMenuClickHandler.bind(this));\n\n    return popup;\n  }\n\n  open() {\n    const { container } = this;\n    const popup = this.build();\n\n    container.append(popup);\n\n    const popupLayout = container.querySelector('.burger__layout');\n    popupLayout.focus();\n    popupLayout.addEventListener('keydown', disableTab.bind(this));\n\n    disableDocumentScroll();\n    this.isOpen = true;\n    this.rotateBurgerMenuButtonIcon();\n  }\n\n  close() {\n    const { container } = this;\n    const popup = container.querySelector('.burger__layout');\n    popup.remove();\n\n    enableDocumentScroll();\n    this.isOpen = false;\n    this.rotateBurgerMenuButtonIcon();\n  }\n\n  rotateBurgerMenuButtonIcon() {\n    this.burgerMenuButton.classList.toggle('rotate');\n  }\n\n  burgerMenuButtonClickHandler() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  burgerMenuClickHandler(event) {\n    if (!event.target.classList.contains('navigation__link')\n      && !event.target.className.includes('logo')\n      && !event.target.classList.contains('burger__layout')) return;\n    this.close();\n  }\n\n  init() {\n    this.burgerMenuButton = document.querySelector('#burger');\n    this.burgerMenuButton.addEventListener('click', this.burgerMenuButtonClickHandler.bind(this));\n  }\n}\n\n// CONCATENATED MODULE: ./js/tagsMenu.js\n\n\nclass tagsMenu_TagsMenu extends activeMenu_ActiveMenu {\n  constructor(container, targetClass, activeClass) {\n    super(container, targetClass, activeClass);\n\n    this.currentTag = null;\n    this.portfolioImages = null;\n    this.imageItems = null;\n  }\n\n  toggleStates(target) {\n    if (this.currentTag === target) return;\n\n    super.toggleStates(target);\n    this.currentTag = target;\n    this.changePortfolioImages(target);\n  }\n\n  getNewPortfolioImages() {\n    const imageItems = [...this.portfolioImages.querySelectorAll('.images__item')];\n\n    const firstImage = imageItems[0];\n    const restImages = imageItems.slice(1);\n    const newPortfolioImages = restImages.concat(firstImage);\n\n    const newPortfolio = document.createDocumentFragment();\n    newPortfolioImages.forEach((item) => newPortfolio.append(item));\n\n    return newPortfolio;\n  }\n\n  changePortfolioImages() {\n    const { portfolioImages } = this;\n    const newPortfolio = this.getNewPortfolioImages();\n\n    portfolioImages.innerHTML = '';\n    portfolioImages.append(newPortfolio);\n  }\n\n  init() {\n    this.currentTag = document.querySelector('.tags__button_active');\n    this.portfolioImages = document.querySelector('#portfolioImages');\n    super.init();\n  }\n}\n\n// CONCATENATED MODULE: ./js/slider.js\n\n\nclass slider_Slider {\n  constructor() {\n    this.currentSlide = 0;\n    this.isSliceEnabled = true;\n    this.slides = [];\n\n    this.slider = null;\n    this.controlButtons = {\n      previousSlide: null,\n      nextSlide: null,\n    };\n  }\n\n  changeCurrentSlide(index) {\n    const { slides } = this;\n\n    this.currentSlide = (index + slides.length) % slides.length;\n  }\n\n  hideItem(direction) {\n    const { slides, currentSlide } = this;\n    const slide = slides[currentSlide];\n\n    this.isSliceEnabled = false;\n    slide.classList.add(direction);\n    slide.addEventListener('animationend', () => {\n      slide.classList.remove('slider__active', direction);\n    });\n  }\n\n  showItem(direction) {\n    const { slides, currentSlide } = this;\n    const slide = slides[currentSlide];\n\n    slide.classList.add('slider__next', direction);\n    slide.addEventListener('animationend', () => {\n      slide.classList.remove('slider__next', direction);\n      slide.classList.add('slider__active');\n      this.isSliceEnabled = true;\n    });\n  }\n\n  nextItem(index) {\n    this.hideItem('to-left');\n    this.changeCurrentSlide(index + 1);\n    this.showItem('from-right');\n  }\n\n  previousItem(index) {\n    this.hideItem('to-right');\n    this.changeCurrentSlide(index - 1);\n    this.showItem('from-left');\n  }\n\n  sliderButtonClickHandler(callBack) {\n    if (this.isSliceEnabled) {\n      callBack(this.currentSlide);\n    }\n  }\n\n  phoneClickHandler(event) {\n    const { target } = event;\n    const dataClass = target.getAttribute('data-class');\n    if (!dataClass) return;\n\n    const content = this.slider.querySelector(`.${dataClass}`);\n    content.classList.toggle('display-off');\n  }\n\n  addHandlers() {\n    const { previousSlide, nextSlide } = this.controlButtons;\n    const { previousItem, nextItem } = this;\n    const gallery = this.slider.querySelector('.gallery');\n\n    previousSlide.addEventListener('click', () => {\n      this.sliderButtonClickHandler(previousItem.bind(this));\n    });\n    nextSlide.addEventListener('click', () => {\n      this.sliderButtonClickHandler(nextItem.bind(this));\n    });\n    gallery.addEventListener('click', this.phoneClickHandler.bind(this));\n    gallery.addEventListener('keyup', (event) => {\n      if (event.key !== ENTER_KEY) return;\n      this.phoneClickHandler.bind(this)(event);\n    });\n  }\n\n  init() {\n    this.slider = document.querySelector('.slider');\n    this.slides = this.slider.querySelectorAll('.slider__item');\n    this.controlButtons.previousSlide = this.slider.querySelector('.slider__button_previous');\n    this.controlButtons.nextSlide = this.slider.querySelector('.slider__button_next');\n\n    this.addHandlers();\n  }\n}\n\n// CONCATENATED MODULE: ./js/form.js\n\n\n\n\nclass form_Form {\n  constructor() {\n    this.form = null;\n    this.subjectField = null;\n    this.messageField = null;\n    this.formSubmitButton = null;\n    this.popup = null;\n  }\n\n  onOpenPopupHandler(popup) {\n    popup.addEventListener('keydown', disableTab.bind(this));\n  }\n\n  onClosePopupHandler(popup) {\n    const { formSubmitButton } = this;\n\n    popup.removeEventListener('keydown', disableTab.bind(this));\n    formSubmitButton.focus();\n    this.form.reset();\n  }\n\n  getMessageText() {\n    const defaultSubject = FORM_DEFAULT_TEXT.SUBJECT;\n    const defaultMessage = FORM_DEFAULT_TEXT.MESSAGE;\n    const subject = this.subjectField.value;\n    const message = this.messageField.value;\n\n    return {\n      status: FORM_DEFAULT_TEXT.STATUS,\n      defaultSubject,\n      defaultMessage,\n      subject,\n      message,\n    };\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    const { popup } = this;\n    const content = this.getMessageText();\n\n    popup.open(content);\n  }\n\n  addHandlers() {\n    this.form.addEventListener('submit', this.submitHandler.bind(this));\n  }\n\n  init() {\n    this.form = document.querySelector('#feedback__form');\n    this.subjectField = this.form.querySelector('#form__subject');\n    this.messageField = this.form.querySelector('#form__message');\n    this.formSubmitButton = this.form.querySelector('#form__submit');\n\n    const onOpenPopupHandler = this.onOpenPopupHandler.bind(this);\n    const onClosePopupHandler = this.onClosePopupHandler.bind(this);\n\n    this.popup = new popup_Popup(document.querySelector('.feedback__wrapper'), 'form__popup', onOpenPopupHandler, onClosePopupHandler);\n\n    this.addHandlers();\n  }\n}\n\n// CONCATENATED MODULE: ./script.js\n\n\n\n\n\n\n\n\n\n\nwindow.onload = () => {\n  const mainNavigationActiveMenu = new scrollMenu_ScrollMenu(ELEMENTS.NAVIGATION_LIST, 'navigation__link', 'navigation__link_active');\n  mainNavigationActiveMenu.init();\n\n  const portfolioImages = document.querySelector('#portfolioImages');\n  const portfolioImagesActiveMenu = new activeMenu_ActiveMenu(portfolioImages, 'portfolio__image', 'portfolio__image_active');\n  portfolioImagesActiveMenu.init();\n\n  const tagsList = document.querySelector('#tagsList');\n  const tagsListActiveMenu = new tagsMenu_TagsMenu(tagsList, 'tags__button', 'tags__button_active');\n  tagsListActiveMenu.init();\n\n  const slider = new slider_Slider();\n  slider.init();\n\n  const form = new form_Form();\n  form.init();\n\n  const burger = new burgerMenu_BurgerMenu(document.body);\n  burger.init();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);